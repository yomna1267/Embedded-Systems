
switches.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000019c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000001ec  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000245  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 cc 00 	jmp	0x198	; 0x198 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#define PINB *((volatile u8*)0x36)
#define PORTB *((u8*)0x38)
#define DDRB *((u8*)0x37)

int main(void){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	 // Set LEDs as an output
	DDRA |= (1<<0);
  74:	aa e3       	ldi	r26, 0x3A	; 58
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	8c 93       	st	X, r24
	DDRA |= (1<<1);
  82:	aa e3       	ldi	r26, 0x3A	; 58
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	ea e3       	ldi	r30, 0x3A	; 58
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	8c 93       	st	X, r24
	// Turn LEDs off
	PORTA &= ~(1<<0);
  90:	ab e3       	ldi	r26, 0x3B	; 59
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	eb e3       	ldi	r30, 0x3B	; 59
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	8e 7f       	andi	r24, 0xFE	; 254
  9c:	8c 93       	st	X, r24
	PORTA &= ~(1<<1);
  9e:	ab e3       	ldi	r26, 0x3B	; 59
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	eb e3       	ldi	r30, 0x3B	; 59
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	8d 7f       	andi	r24, 0xFD	; 253
  aa:	8c 93       	st	X, r24
	// Set switches as an input
	DDRB &= ~(1<<0);
  ac:	a7 e3       	ldi	r26, 0x37	; 55
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	e7 e3       	ldi	r30, 0x37	; 55
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	8c 93       	st	X, r24
	DDRB &= ~(1<<1);
  ba:	a7 e3       	ldi	r26, 0x37	; 55
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	e7 e3       	ldi	r30, 0x37	; 55
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8d 7f       	andi	r24, 0xFD	; 253
  c6:	8c 93       	st	X, r24
	DDRB &= ~(1<<2);
  c8:	a7 e3       	ldi	r26, 0x37	; 55
  ca:	b0 e0       	ldi	r27, 0x00	; 0
  cc:	e7 e3       	ldi	r30, 0x37	; 55
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	8b 7f       	andi	r24, 0xFB	; 251
  d4:	8c 93       	st	X, r24
	// Switches are pulled up
	PORTB |= (1<<0);
  d6:	a8 e3       	ldi	r26, 0x38	; 56
  d8:	b0 e0       	ldi	r27, 0x00	; 0
  da:	e8 e3       	ldi	r30, 0x38	; 56
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	81 60       	ori	r24, 0x01	; 1
  e2:	8c 93       	st	X, r24
	PORTB |= (1<<1);
  e4:	a8 e3       	ldi	r26, 0x38	; 56
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e8 e3       	ldi	r30, 0x38	; 56
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	82 60       	ori	r24, 0x02	; 2
  f0:	8c 93       	st	X, r24
	PORTB |= (1<<2);
  f2:	a8 e3       	ldi	r26, 0x38	; 56
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e8 e3       	ldi	r30, 0x38	; 56
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	84 60       	ori	r24, 0x04	; 4
  fe:	8c 93       	st	X, r24


	while(1){
		if(((PINB>>0)&1) == 0){
 100:	e6 e3       	ldi	r30, 0x36	; 54
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 2f       	mov	r24, r24
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	81 70       	andi	r24, 0x01	; 1
 10c:	90 70       	andi	r25, 0x00	; 0
 10e:	00 97       	sbiw	r24, 0x00	; 0
 110:	41 f4       	brne	.+16     	; 0x122 <main+0xb6>
			PORTA |= (1<<0);
 112:	ab e3       	ldi	r26, 0x3B	; 59
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	eb e3       	ldi	r30, 0x3B	; 59
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	81 60       	ori	r24, 0x01	; 1
 11e:	8c 93       	st	X, r24
 120:	ef cf       	rjmp	.-34     	; 0x100 <main+0x94>
		}
		else if(((PINB>>1)&1) == 0){
 122:	e6 e3       	ldi	r30, 0x36	; 54
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	86 95       	lsr	r24
 12a:	88 2f       	mov	r24, r24
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	81 70       	andi	r24, 0x01	; 1
 130:	90 70       	andi	r25, 0x00	; 0
 132:	00 97       	sbiw	r24, 0x00	; 0
 134:	41 f4       	brne	.+16     	; 0x146 <main+0xda>
			PORTA |= (1<<1);
 136:	ab e3       	ldi	r26, 0x3B	; 59
 138:	b0 e0       	ldi	r27, 0x00	; 0
 13a:	eb e3       	ldi	r30, 0x3B	; 59
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	82 60       	ori	r24, 0x02	; 2
 142:	8c 93       	st	X, r24
 144:	dd cf       	rjmp	.-70     	; 0x100 <main+0x94>
		}
		else if(((PINB>>2)&1) == 0){
 146:	e6 e3       	ldi	r30, 0x36	; 54
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	86 95       	lsr	r24
 14e:	86 95       	lsr	r24
 150:	88 2f       	mov	r24, r24
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	81 70       	andi	r24, 0x01	; 1
 156:	90 70       	andi	r25, 0x00	; 0
 158:	00 97       	sbiw	r24, 0x00	; 0
 15a:	79 f4       	brne	.+30     	; 0x17a <main+0x10e>
			PORTA |= (1<<0);
 15c:	ab e3       	ldi	r26, 0x3B	; 59
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	eb e3       	ldi	r30, 0x3B	; 59
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	81 60       	ori	r24, 0x01	; 1
 168:	8c 93       	st	X, r24
			PORTA |= (1<<1);
 16a:	ab e3       	ldi	r26, 0x3B	; 59
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	eb e3       	ldi	r30, 0x3B	; 59
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	82 60       	ori	r24, 0x02	; 2
 176:	8c 93       	st	X, r24
 178:	c3 cf       	rjmp	.-122    	; 0x100 <main+0x94>
		}
		else{
			PORTA &= ~(1<<0);
 17a:	ab e3       	ldi	r26, 0x3B	; 59
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	eb e3       	ldi	r30, 0x3B	; 59
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	8e 7f       	andi	r24, 0xFE	; 254
 186:	8c 93       	st	X, r24
			PORTA &= ~(1<<1);
 188:	ab e3       	ldi	r26, 0x3B	; 59
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	eb e3       	ldi	r30, 0x3B	; 59
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8d 7f       	andi	r24, 0xFD	; 253
 194:	8c 93       	st	X, r24
 196:	b4 cf       	rjmp	.-152    	; 0x100 <main+0x94>

00000198 <_exit>:
 198:	f8 94       	cli

0000019a <__stop_program>:
 19a:	ff cf       	rjmp	.-2      	; 0x19a <__stop_program>
